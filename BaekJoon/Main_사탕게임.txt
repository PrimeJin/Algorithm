import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;

public class Main_3085_사탕게임 {
	static char[][] chArr;
	static int[] dy = {0, 1, 0, -1};  //우 하 좌 상
	static int[] dx = {1, 0, -1, 0};
	static int N;
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		
		N = Integer.parseInt(br.readLine());  //보드 크기
		
		chArr = new char[N][N];
		for(int i=0; i<N; i++) {
			String str = br.readLine();
			for(int j=0; j<N; j++) {
				chArr[i][j] = str.charAt(j);
			}
		}
		
		int answer = 0;
		for(int i=0; i<N; i++) {
			for(int j=0; j<N; j++) {
				int rCount = 1;
				for(int k=j+1; k<N; k++) {
					char tmp = chArr[i][j];
					if(tmp == chArr[i][k]) {
						rCount++;
						answer = Math.max(answer, rCount);
					} else {
						tmp = chArr[i][k];
						rCount = 1;
					}
				}
				
				int cCount = 1;
			}
		}
		
		
		
		for(int i=0; i<N; i++) {
			for(int j=0; j<N; j++) {
				swap(i, j);
			}
		}
		
		
		
	}
	
	
	
	public static void swap(int y, int x) {
		char[][] copyArr = Arrays.copyOf(chArr, chArr.length);
		
//		copyArr[p1.y][p1.x] = chArr[p2.y][p2.x];
//		copyArr[p2.y][p2.x] = chArr[p1.y][p1.x];
		
		for(int i=0; i<4; i++) {
			int ny = y + dy[i];
			int nx = x + dx[i];
			
			if(0<=ny&&ny<N && 0<=nx&&nx<N) {
				if(copyArr[ny][nx] != copyArr[y][x]) {  //같을 때는 바꾸는게 의미없음
					copyArr[ny][nx] = chArr[y][x];
					copyArr[y][x] = chArr[ny][nx];
				}
			}
			
			count(copyArr);
		}
	}
	
	public static void count(char[][] swapArr) {
		
		for(int i=0; i<4; i++) {
			for
		}
	}
	
	static class Position {
		int y;
		int x;
		
		public Position(int y, int x) {
			this.y = y;
			this.x = x;
		}
	}
}
